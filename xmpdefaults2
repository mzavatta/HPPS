XmpVersion: 12.1	# take from psf version
VerMgmt: 12.1		# take from psf version
IntStyle: ise		# leave ise
MHS File: system.mhs	# !!!!!
MSS File: system.mss	# !!!!!
Architecture: virtex5	# !!!!!
Device: xc5vlx110t	# !!!!!
Package: ff1136		# !!!!!
SpeedGrade: -1		# some kind of speed parameter of the particular FPGA model, e.g. -5 is faster than -4, leave
UserCmd1: 		# leave
UserCmd1Type: 0		# leave
UserCmd2: 		# leave
UserCmd2Type: 0		# leave
GenSimTB: 0		# Generate Simulation Test Bench, leave
SdkExportBmmBit: 1	# Useful to export the bitstream and BMM as well when exporting to SDK from XPS, it's XPS default, leave
SdkExportDir: SDK/SDK_Export	#It's the XPS default one, leave
InsertNoPads: 0		# No idea, leave
WarnForEAArch: 1	# It's always like this in all projects, no idea, leave
HdlLang: vhdl		# It's the default one, leave
SimModel: BEHAVIORAL	# Default simulation model, leave
UcfFile: data/system.ucf	# !!!!!!
EnableParTimingError: 0		# if 1, XPS treat the inability of place-and-route tools to meet timing constraints as an error instead of a warning. This stops the implementation flow and a bitstream is not generated.
ShowLicenseDialog: 1	# leave
LockAddr: DDR2_SDRAM,C_MPMC_BASEADDR,xps_mailbox_0,C_SPLB1_BASEADDR 	# likely only useful to lock address modifications in the GUI xps tool, I tried with a project and if I leave all addresses unlocked it does not even appaear, leave blank
### begin of a chunk of related statements
Processor: microblaze_1		# !!!!
BootLoop: 0			# refer to "Initializing Bistreams with bootloops" in the xps help, assign as default
XmdStub: 0			# refer to "Initializing Bistreams with XMDSTUB Procedure" in the xps help, assign as default
###
### begin of a chunk of related statements
Processor: microblaze_0		# !!!!
BootLoop: 0			# refer to "Initializing Bistreams with bootloops" in the xps help, assign as default
XmdStub: 0			# refer to "Initializing Bistreams with XMDSTUB Procedure" in the xps help, assign as default
###
### begin of a chunk of related statements
# leave this value for everything except
# InitBram
# CompilerOptLevel
# GlobPtrOpt (I would default it to 0, no)
# LinkerScript
SwProj: TestApp_Memory_microblaze_0
Processor: microblaze_0
Executable: TestApp_Memory_microblaze_0/executable.elf
Header: Software/Software_Cores.h
Source: Software/microblaze_0_Cores.c
Source: Software/microblaze_0_Main.c
Source: Software/MailBox_SW.c
DefaultInit: EXECUTABLE
InitBram: 1		# see "Initializing Bitstreams for Hardware Testing" in xps help
Active: 1		# no idea
CompilerOptLevel: 2	# I would put it to 
GlobPtrOpt: 0		# means Use Global Pointer Optimization
DebugSym: 1		
ProfileFlag: 0
ProgStart: 
StackSize: 
HeapSize: 
LinkerScript: TestApp_Memory_microblaze_0/src/TestApp_Memory_LinkScr.ld
ProgCCFlags: 
CompileInXps: 1
NonXpsApp: 0
###
### begin of a chunk of related statements
SwProj: TestApp_Memory_microblaze_1
Processor: microblaze_1
Executable: TestApp_Memory_microblaze_1/executable.elf
Header: Software/Hardware_Cores.h
Header: Software/Software_Cores.h
Source: Software/scheduler.c
Source: Software/scheduler_HW_Cores.c
Source: Software/scheduler_HW_Interrupt.c
Source: Software/scheduler_SW_Cores.c
SearchIncl: drivers/em_bridge_npi_v1_00_a/src
Source: Software/scheduler_MailBox_SW.c
DefaultInit: EXECUTABLE
InitBram: 1
Active: 1
CompilerOptLevel: 0
GlobPtrOpt: 0
DebugSym: 1
ProfileFlag: 0
ProgStart: 
StackSize: 
HeapSize: 
LinkerScript: TestApp_Memory_microblaze_1/src/TestApp_Memory_LinkScr.ld
ProgCCFlags: 
CompileInXps: 1
NonXpsApp: 0
###